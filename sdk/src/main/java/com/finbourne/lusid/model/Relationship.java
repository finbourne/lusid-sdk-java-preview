/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3438
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.RelatedEntity;
import com.finbourne.lusid.model.ResourceId;
import com.finbourne.lusid.model.Version;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Representation of a Relationship between a requested entity with the stated entity as RelatedEntityId
 */
@ApiModel(description = "Representation of a Relationship between a requested entity with the stated entity as RelatedEntityId")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Relationship {
  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Version version;

  public static final String SERIALIZED_NAME_RELATIONSHIP_DEFINITION_ID = "relationshipDefinitionId";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_DEFINITION_ID)
  private ResourceId relationshipDefinitionId;

  public static final String SERIALIZED_NAME_RELATED_ENTITY = "relatedEntity";
  @SerializedName(SERIALIZED_NAME_RELATED_ENTITY)
  private RelatedEntity relatedEntity;

  public static final String SERIALIZED_NAME_TRAVERSAL_DIRECTION = "traversalDirection";
  @SerializedName(SERIALIZED_NAME_TRAVERSAL_DIRECTION)
  private String traversalDirection;

  public static final String SERIALIZED_NAME_TRAVERSAL_DESCRIPTION = "traversalDescription";
  @SerializedName(SERIALIZED_NAME_TRAVERSAL_DESCRIPTION)
  private String traversalDescription;

  public static final String SERIALIZED_NAME_EFFECTIVE_FROM = "effectiveFrom";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FROM)
  private OffsetDateTime effectiveFrom;


  public Relationship version(Version version) {
    this.version = version; 
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public Version getVersion() {
    return version;
  }

  public void setVersion(Version version) {
    this.version = version;
  }


  public Relationship relationshipDefinitionId(ResourceId relationshipDefinitionId) {
    this.relationshipDefinitionId = relationshipDefinitionId; 
    return this;
  }

   /**
   * Get relationshipDefinitionId
   * @return relationshipDefinitionId
  **/
  @ApiModelProperty(required = true, value = "")
  public ResourceId getRelationshipDefinitionId() {
    return relationshipDefinitionId;
  }

  public void setRelationshipDefinitionId(ResourceId relationshipDefinitionId) {
    this.relationshipDefinitionId = relationshipDefinitionId;
  }


  public Relationship relatedEntity(RelatedEntity relatedEntity) {
    this.relatedEntity = relatedEntity; 
    return this;
  }

   /**
   * Get relatedEntity
   * @return relatedEntity
  **/
  @ApiModelProperty(required = true, value = "")
  public RelatedEntity getRelatedEntity() {
    return relatedEntity;
  }

  public void setRelatedEntity(RelatedEntity relatedEntity) {
    this.relatedEntity = relatedEntity;
  }


  public Relationship traversalDirection(String traversalDirection) {
    this.traversalDirection = traversalDirection; 
    return this;
  }

   /**
   * Direction of relationship betwen the requested entity and related entity. This can be &#39;In&#39; or &#39;Out&#39;. Read more about relationships traversal direction in LUSID Knowledge Base here https://support.lusid.com/relationships.
   * @return traversalDirection
  **/
  @ApiModelProperty(required = true, value = "Direction of relationship betwen the requested entity and related entity. This can be 'In' or 'Out'. Read more about relationships traversal direction in LUSID Knowledge Base here https://support.lusid.com/relationships.")
  public String getTraversalDirection() {
    return traversalDirection;
  }

  public void setTraversalDirection(String traversalDirection) {
    this.traversalDirection = traversalDirection;
  }


  public Relationship traversalDescription(String traversalDescription) {
    this.traversalDescription = traversalDescription; 
    return this;
  }

   /**
   * Description of the relationship based on relationship&#39;s traversal direction. If &#39;TraversalDirection&#39; is &#39;Out&#39;, this description would be &#39;OutwardDescription&#39; from the associated relationship definition. If &#39;TraversalDirection&#39; is &#39;In&#39;, this description would be &#39;InwardDescription&#39; from the associated relationship definition.
   * @return traversalDescription
  **/
  @ApiModelProperty(required = true, value = "Description of the relationship based on relationship's traversal direction. If 'TraversalDirection' is 'Out', this description would be 'OutwardDescription' from the associated relationship definition. If 'TraversalDirection' is 'In', this description would be 'InwardDescription' from the associated relationship definition.")
  public String getTraversalDescription() {
    return traversalDescription;
  }

  public void setTraversalDescription(String traversalDescription) {
    this.traversalDescription = traversalDescription;
  }


  public Relationship effectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom; 
    return this;
  }

   /**
   * The effective datetime from which the relationship is valid.
   * @return effectiveFrom
  **/
  @ApiModelProperty(value = "The effective datetime from which the relationship is valid.")
  public OffsetDateTime getEffectiveFrom() {
    return effectiveFrom;
  }

  public void setEffectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return true;
  }

  @Override
  public int hashCode() {
    return super.hashCode();  
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Relationship {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    relationshipDefinitionId: ").append(toIndentedString(relationshipDefinitionId)).append("\n");
    sb.append("    relatedEntity: ").append(toIndentedString(relatedEntity)).append("\n");
    sb.append("    traversalDirection: ").append(toIndentedString(traversalDirection)).append("\n");
    sb.append("    traversalDescription: ").append(toIndentedString(traversalDescription)).append("\n");
    sb.append("    effectiveFrom: ").append(toIndentedString(effectiveFrom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
