/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3438
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CDSs generally conform to fairly standard definitions, but can be tweaked in a number of different ways.  This class gathers a number of common features which may deviate. These will default to the market standard when  no overrides are provided
 */
@ApiModel(description = "CDSs generally conform to fairly standard definitions, but can be tweaked in a number of different ways.  This class gathers a number of common features which may deviate. These will default to the market standard when  no overrides are provided")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CdsProtectionDetailSpecification {
  /**
   * The available values are: Unknown, SNR, SUB, JRSUBUT2, PREFT1, SECDOM, SNRFOR, SUBLT2
   */
  @JsonAdapter(SeniorityEnum.Adapter.class)
  public enum SeniorityEnum {
    UNKNOWN("Unknown"),
    
    SNR("SNR"),
    
    SUB("SUB"),
    
    JRSUBUT2("JRSUBUT2"),
    
    PREFT1("PREFT1"),
    
    SECDOM("SECDOM"),
    
    SNRFOR("SNRFOR"),
    
    SUBLT2("SUBLT2");

    private String value;

    SeniorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeniorityEnum fromValue(String value) {
      for (SeniorityEnum b : SeniorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SeniorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeniorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeniorityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SeniorityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SENIORITY = "seniority";
  @SerializedName(SERIALIZED_NAME_SENIORITY)
  private SeniorityEnum seniority;

  /**
   * The available values are: Unknown, CR, MR, MM, XR
   */
  @JsonAdapter(RestructuringTypeEnum.Adapter.class)
  public enum RestructuringTypeEnum {
    UNKNOWN("Unknown"),
    
    CR("CR"),
    
    MR("MR"),
    
    MM("MM"),
    
    XR("XR");

    private String value;

    RestructuringTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RestructuringTypeEnum fromValue(String value) {
      for (RestructuringTypeEnum b : RestructuringTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RestructuringTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RestructuringTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RestructuringTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RestructuringTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RESTRUCTURING_TYPE = "restructuringType";
  @SerializedName(SERIALIZED_NAME_RESTRUCTURING_TYPE)
  private RestructuringTypeEnum restructuringType;

  public static final String SERIALIZED_NAME_PROTECT_START_DAY = "protectStartDay";
  @SerializedName(SERIALIZED_NAME_PROTECT_START_DAY)
  private Boolean protectStartDay;

  public static final String SERIALIZED_NAME_PAY_ACCRUED_INTEREST_ON_DEFAULT = "payAccruedInterestOnDefault";
  @SerializedName(SERIALIZED_NAME_PAY_ACCRUED_INTEREST_ON_DEFAULT)
  private Boolean payAccruedInterestOnDefault;


  public CdsProtectionDetailSpecification seniority(SeniorityEnum seniority) {
    this.seniority = seniority; 
    return this;
  }

   /**
   * The available values are: Unknown, SNR, SUB, JRSUBUT2, PREFT1, SECDOM, SNRFOR, SUBLT2
   * @return seniority
  **/
  @ApiModelProperty(required = true, value = "The available values are: Unknown, SNR, SUB, JRSUBUT2, PREFT1, SECDOM, SNRFOR, SUBLT2")
  public SeniorityEnum getSeniority() {
    return seniority;
  }

  public void setSeniority(SeniorityEnum seniority) {
    this.seniority = seniority;
  }


  public CdsProtectionDetailSpecification restructuringType(RestructuringTypeEnum restructuringType) {
    this.restructuringType = restructuringType; 
    return this;
  }

   /**
   * The available values are: Unknown, CR, MR, MM, XR
   * @return restructuringType
  **/
  @ApiModelProperty(required = true, value = "The available values are: Unknown, CR, MR, MM, XR")
  public RestructuringTypeEnum getRestructuringType() {
    return restructuringType;
  }

  public void setRestructuringType(RestructuringTypeEnum restructuringType) {
    this.restructuringType = restructuringType;
  }


  public CdsProtectionDetailSpecification protectStartDay(Boolean protectStartDay) {
    this.protectStartDay = protectStartDay; 
    return this;
  }

   /**
   * Does the protection leg pay out in the case of default on the start date
   * @return protectStartDay
  **/
  @ApiModelProperty(required = true, value = "Does the protection leg pay out in the case of default on the start date")
  public Boolean getProtectStartDay() {
    return protectStartDay;
  }

  public void setProtectStartDay(Boolean protectStartDay) {
    this.protectStartDay = protectStartDay;
  }


  public CdsProtectionDetailSpecification payAccruedInterestOnDefault(Boolean payAccruedInterestOnDefault) {
    this.payAccruedInterestOnDefault = payAccruedInterestOnDefault; 
    return this;
  }

   /**
   * Should accrued interest on the premium leg be paid if a credit event occurs
   * @return payAccruedInterestOnDefault
  **/
  @ApiModelProperty(required = true, value = "Should accrued interest on the premium leg be paid if a credit event occurs")
  public Boolean getPayAccruedInterestOnDefault() {
    return payAccruedInterestOnDefault;
  }

  public void setPayAccruedInterestOnDefault(Boolean payAccruedInterestOnDefault) {
    this.payAccruedInterestOnDefault = payAccruedInterestOnDefault;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return true;
  }

  @Override
  public int hashCode() {
    return super.hashCode();  
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CdsProtectionDetailSpecification {\n");
    sb.append("    seniority: ").append(toIndentedString(seniority)).append("\n");
    sb.append("    restructuringType: ").append(toIndentedString(restructuringType)).append("\n");
    sb.append("    protectStartDay: ").append(toIndentedString(protectStartDay)).append("\n");
    sb.append("    payAccruedInterestOnDefault: ").append(toIndentedString(payAccruedInterestOnDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
