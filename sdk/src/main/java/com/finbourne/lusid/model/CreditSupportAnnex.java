/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3439
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.ResourceId;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Entity to capture the calculable and queryable methods and practices of determining and transferring collateral  to a counterparty as part of margining of transactions. These typically come from a particular ISDA agreement  that is in place between the two counterparties.
 */
@ApiModel(description = "Entity to capture the calculable and queryable methods and practices of determining and transferring collateral  to a counterparty as part of margining of transactions. These typically come from a particular ISDA agreement  that is in place between the two counterparties.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreditSupportAnnex {
  public static final String SERIALIZED_NAME_REFERENCE_CURRENCY = "referenceCurrency";
  @SerializedName(SERIALIZED_NAME_REFERENCE_CURRENCY)
  private String referenceCurrency;

  public static final String SERIALIZED_NAME_COLLATERAL_CURRENCIES = "collateralCurrencies";
  @SerializedName(SERIALIZED_NAME_COLLATERAL_CURRENCIES)
  private List<String> collateralCurrencies = new ArrayList<>();

  public static final String SERIALIZED_NAME_ISDA_AGREEMENT_VERSION = "isdaAgreementVersion";
  @SerializedName(SERIALIZED_NAME_ISDA_AGREEMENT_VERSION)
  private String isdaAgreementVersion;

  public static final String SERIALIZED_NAME_MARGIN_CALL_FREQUENCY = "marginCallFrequency";
  @SerializedName(SERIALIZED_NAME_MARGIN_CALL_FREQUENCY)
  private String marginCallFrequency;

  public static final String SERIALIZED_NAME_VALUATION_AGENT = "valuationAgent";
  @SerializedName(SERIALIZED_NAME_VALUATION_AGENT)
  private String valuationAgent;

  public static final String SERIALIZED_NAME_THRESHOLD_AMOUNT = "thresholdAmount";
  @SerializedName(SERIALIZED_NAME_THRESHOLD_AMOUNT)
  private Double thresholdAmount;

  public static final String SERIALIZED_NAME_ROUNDING_DECIMAL_PLACES = "roundingDecimalPlaces";
  @SerializedName(SERIALIZED_NAME_ROUNDING_DECIMAL_PLACES)
  private Integer roundingDecimalPlaces;

  public static final String SERIALIZED_NAME_INITIAL_MARGIN_AMOUNT = "initialMarginAmount";
  @SerializedName(SERIALIZED_NAME_INITIAL_MARGIN_AMOUNT)
  private Double initialMarginAmount;

  public static final String SERIALIZED_NAME_MINIMUM_TRANSFER_AMOUNT = "minimumTransferAmount";
  @SerializedName(SERIALIZED_NAME_MINIMUM_TRANSFER_AMOUNT)
  private Double minimumTransferAmount;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private ResourceId id;


  public CreditSupportAnnex referenceCurrency(String referenceCurrency) {
    this.referenceCurrency = referenceCurrency; 
    return this;
  }

   /**
   * The base, or reference, currency against which MtM value and exposure should be calculated  and in which the CSA parameters are defined if the currency is not otherwise explicitly stated.
   * @return referenceCurrency
  **/
  @ApiModelProperty(required = true, value = "The base, or reference, currency against which MtM value and exposure should be calculated  and in which the CSA parameters are defined if the currency is not otherwise explicitly stated.")
  public String getReferenceCurrency() {
    return referenceCurrency;
  }

  public void setReferenceCurrency(String referenceCurrency) {
    this.referenceCurrency = referenceCurrency;
  }


  public CreditSupportAnnex collateralCurrencies(List<String> collateralCurrencies) {
    this.collateralCurrencies = collateralCurrencies; 
    return this;
  }

  public CreditSupportAnnex addCollateralCurrenciesItem(String collateralCurrenciesItem) {
   
    this.collateralCurrencies.add(collateralCurrenciesItem);
    return this;
  }

   /**
   * The set of currencies within which it is acceptable to post cash collateral.
   * @return collateralCurrencies
  **/
  @ApiModelProperty(required = true, value = "The set of currencies within which it is acceptable to post cash collateral.")
  public List<String> getCollateralCurrencies() {
    return collateralCurrencies;
  }

  public void setCollateralCurrencies(List<String> collateralCurrencies) {
    this.collateralCurrencies = collateralCurrencies;
  }


  public CreditSupportAnnex isdaAgreementVersion(String isdaAgreementVersion) {
    this.isdaAgreementVersion = isdaAgreementVersion; 
    return this;
  }

   /**
   * The transactions will take place with reference to a particular ISDA master agreement. This  will likely be either the ISDA 1992 or ISDA 2002 agremeents or ISDA close-out 2009.
   * @return isdaAgreementVersion
  **/
  @ApiModelProperty(required = true, value = "The transactions will take place with reference to a particular ISDA master agreement. This  will likely be either the ISDA 1992 or ISDA 2002 agremeents or ISDA close-out 2009.")
  public String getIsdaAgreementVersion() {
    return isdaAgreementVersion;
  }

  public void setIsdaAgreementVersion(String isdaAgreementVersion) {
    this.isdaAgreementVersion = isdaAgreementVersion;
  }


  public CreditSupportAnnex marginCallFrequency(String marginCallFrequency) {
    this.marginCallFrequency = marginCallFrequency; 
    return this;
  }

   /**
   * The tenor, e.g. daily (1D) or biweekly (2W), at which frequency a margin call will be made, calculations  made and money transferred to readjust. The calculation might also require a specific time for valuation and notification.
   * @return marginCallFrequency
  **/
  @ApiModelProperty(required = true, value = "The tenor, e.g. daily (1D) or biweekly (2W), at which frequency a margin call will be made, calculations  made and money transferred to readjust. The calculation might also require a specific time for valuation and notification.")
  public String getMarginCallFrequency() {
    return marginCallFrequency;
  }

  public void setMarginCallFrequency(String marginCallFrequency) {
    this.marginCallFrequency = marginCallFrequency;
  }


  public CreditSupportAnnex valuationAgent(String valuationAgent) {
    this.valuationAgent = valuationAgent; 
    return this;
  }

   /**
   * Are the calculations performed by the institutions&#39;s counterparty or the institution trading with them.
   * @return valuationAgent
  **/
  @ApiModelProperty(required = true, value = "Are the calculations performed by the institutions's counterparty or the institution trading with them.")
  public String getValuationAgent() {
    return valuationAgent;
  }

  public void setValuationAgent(String valuationAgent) {
    this.valuationAgent = valuationAgent;
  }


  public CreditSupportAnnex thresholdAmount(Double thresholdAmount) {
    this.thresholdAmount = thresholdAmount; 
    return this;
  }

   /**
   * At what level of exposure does collateral need to be posted. Will typically be zero for banks.  Should be stated in reference currency
   * @return thresholdAmount
  **/
  @ApiModelProperty(required = true, value = "At what level of exposure does collateral need to be posted. Will typically be zero for banks.  Should be stated in reference currency")
  public Double getThresholdAmount() {
    return thresholdAmount;
  }

  public void setThresholdAmount(Double thresholdAmount) {
    this.thresholdAmount = thresholdAmount;
  }


  public CreditSupportAnnex roundingDecimalPlaces(Integer roundingDecimalPlaces) {
    this.roundingDecimalPlaces = roundingDecimalPlaces; 
    return this;
  }

   /**
   * Where a calculation needs to be rounded to a specific number of decimal places,  this states the number that that requires.
   * @return roundingDecimalPlaces
  **/
  @ApiModelProperty(required = true, value = "Where a calculation needs to be rounded to a specific number of decimal places,  this states the number that that requires.")
  public Integer getRoundingDecimalPlaces() {
    return roundingDecimalPlaces;
  }

  public void setRoundingDecimalPlaces(Integer roundingDecimalPlaces) {
    this.roundingDecimalPlaces = roundingDecimalPlaces;
  }


  public CreditSupportAnnex initialMarginAmount(Double initialMarginAmount) {
    this.initialMarginAmount = initialMarginAmount; 
    return this;
  }

   /**
   * The initial margin that is required. In the reference currency
   * @return initialMarginAmount
  **/
  @ApiModelProperty(required = true, value = "The initial margin that is required. In the reference currency")
  public Double getInitialMarginAmount() {
    return initialMarginAmount;
  }

  public void setInitialMarginAmount(Double initialMarginAmount) {
    this.initialMarginAmount = initialMarginAmount;
  }


  public CreditSupportAnnex minimumTransferAmount(Double minimumTransferAmount) {
    this.minimumTransferAmount = minimumTransferAmount; 
    return this;
  }

   /**
   * The minimum amount, in the reference currency, that must be transferred when required.
   * @return minimumTransferAmount
  **/
  @ApiModelProperty(required = true, value = "The minimum amount, in the reference currency, that must be transferred when required.")
  public Double getMinimumTransferAmount() {
    return minimumTransferAmount;
  }

  public void setMinimumTransferAmount(Double minimumTransferAmount) {
    this.minimumTransferAmount = minimumTransferAmount;
  }


  public CreditSupportAnnex id(ResourceId id) {
    this.id = id; 
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public ResourceId getId() {
    return id;
  }

  public void setId(ResourceId id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return true;
  }

  @Override
  public int hashCode() {
    return super.hashCode();  
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditSupportAnnex {\n");
    sb.append("    referenceCurrency: ").append(toIndentedString(referenceCurrency)).append("\n");
    sb.append("    collateralCurrencies: ").append(toIndentedString(collateralCurrencies)).append("\n");
    sb.append("    isdaAgreementVersion: ").append(toIndentedString(isdaAgreementVersion)).append("\n");
    sb.append("    marginCallFrequency: ").append(toIndentedString(marginCallFrequency)).append("\n");
    sb.append("    valuationAgent: ").append(toIndentedString(valuationAgent)).append("\n");
    sb.append("    thresholdAmount: ").append(toIndentedString(thresholdAmount)).append("\n");
    sb.append("    roundingDecimalPlaces: ").append(toIndentedString(roundingDecimalPlaces)).append("\n");
    sb.append("    initialMarginAmount: ").append(toIndentedString(initialMarginAmount)).append("\n");
    sb.append("    minimumTransferAmount: ").append(toIndentedString(minimumTransferAmount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
