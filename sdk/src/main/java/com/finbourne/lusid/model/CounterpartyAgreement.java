/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3439
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.CounterpartySignatory;
import com.finbourne.lusid.model.ResourceId;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Represents the legal agreement between two parties engaged in an OTC transaction.  A typical example would be a 2002 ISDA Master Agreement, signed by two legal entities on a given date.
 */
@ApiModel(description = "Represents the legal agreement between two parties engaged in an OTC transaction.  A typical example would be a 2002 ISDA Master Agreement, signed by two legal entities on a given date.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CounterpartyAgreement {
  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_AGREEMENT_TYPE = "agreementType";
  @SerializedName(SERIALIZED_NAME_AGREEMENT_TYPE)
  private String agreementType;

  public static final String SERIALIZED_NAME_COUNTERPARTY_SIGNATORY = "counterpartySignatory";
  @SerializedName(SERIALIZED_NAME_COUNTERPARTY_SIGNATORY)
  private CounterpartySignatory counterpartySignatory;

  public static final String SERIALIZED_NAME_DATED_AS_OF = "datedAsOf";
  @SerializedName(SERIALIZED_NAME_DATED_AS_OF)
  private OffsetDateTime datedAsOf;

  public static final String SERIALIZED_NAME_CREDIT_SUPPORT_ANNEX_ID = "creditSupportAnnexId";
  @SerializedName(SERIALIZED_NAME_CREDIT_SUPPORT_ANNEX_ID)
  private ResourceId creditSupportAnnexId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private ResourceId id;


  public CounterpartyAgreement displayName(String displayName) {
    this.displayName = displayName; 
    return this;
  }

   /**
   * A user-defined display label for the Counterparty Agreement.
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "A user-defined display label for the Counterparty Agreement.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CounterpartyAgreement agreementType(String agreementType) {
    this.agreementType = agreementType; 
    return this;
  }

   /**
   * A user-defined field to capture the type of agreement this represents. Examples might be \&quot;ISDA 2002 Master Agreement\&quot; or \&quot;ISDA 1992 Master Agreement\&quot;.
   * @return agreementType
  **/
  @ApiModelProperty(required = true, value = "A user-defined field to capture the type of agreement this represents. Examples might be \"ISDA 2002 Master Agreement\" or \"ISDA 1992 Master Agreement\".")
  public String getAgreementType() {
    return agreementType;
  }

  public void setAgreementType(String agreementType) {
    this.agreementType = agreementType;
  }


  public CounterpartyAgreement counterpartySignatory(CounterpartySignatory counterpartySignatory) {
    this.counterpartySignatory = counterpartySignatory; 
    return this;
  }

   /**
   * Get counterpartySignatory
   * @return counterpartySignatory
  **/
  @ApiModelProperty(required = true, value = "")
  public CounterpartySignatory getCounterpartySignatory() {
    return counterpartySignatory;
  }

  public void setCounterpartySignatory(CounterpartySignatory counterpartySignatory) {
    this.counterpartySignatory = counterpartySignatory;
  }


  public CounterpartyAgreement datedAsOf(OffsetDateTime datedAsOf) {
    this.datedAsOf = datedAsOf; 
    return this;
  }

   /**
   * The date on which the CounterpartyAgreement was signed by both parties.
   * @return datedAsOf
  **/
  @ApiModelProperty(required = true, value = "The date on which the CounterpartyAgreement was signed by both parties.")
  public OffsetDateTime getDatedAsOf() {
    return datedAsOf;
  }

  public void setDatedAsOf(OffsetDateTime datedAsOf) {
    this.datedAsOf = datedAsOf;
  }


  public CounterpartyAgreement creditSupportAnnexId(ResourceId creditSupportAnnexId) {
    this.creditSupportAnnexId = creditSupportAnnexId; 
    return this;
  }

   /**
   * Get creditSupportAnnexId
   * @return creditSupportAnnexId
  **/
  @ApiModelProperty(required = true, value = "")
  public ResourceId getCreditSupportAnnexId() {
    return creditSupportAnnexId;
  }

  public void setCreditSupportAnnexId(ResourceId creditSupportAnnexId) {
    this.creditSupportAnnexId = creditSupportAnnexId;
  }


  public CounterpartyAgreement id(ResourceId id) {
    this.id = id; 
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public ResourceId getId() {
    return id;
  }

  public void setId(ResourceId id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return true;
  }

  @Override
  public int hashCode() {
    return super.hashCode();  
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CounterpartyAgreement {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    agreementType: ").append(toIndentedString(agreementType)).append("\n");
    sb.append("    counterpartySignatory: ").append(toIndentedString(counterpartySignatory)).append("\n");
    sb.append("    datedAsOf: ").append(toIndentedString(datedAsOf)).append("\n");
    sb.append("    creditSupportAnnexId: ").append(toIndentedString(creditSupportAnnexId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
