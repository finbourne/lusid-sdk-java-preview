/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3439
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TransactionQueryParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransactionQueryParameters {
  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  /**
   * The date to compare against the upper and lower bounds for the effective datetime or cut label. Defaults to &#39;TradeDate&#39; if not specified. The available values are: TradeDate, SettleDate
   */
  @JsonAdapter(QueryModeEnum.Adapter.class)
  public enum QueryModeEnum {
    TRADEDATE("TradeDate"),
    
    SETTLEDATE("SettleDate");

    private String value;

    QueryModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QueryModeEnum fromValue(String value) {
      for (QueryModeEnum b : QueryModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QueryModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QueryModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QueryModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return QueryModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_QUERY_MODE = "queryMode";
  @SerializedName(SERIALIZED_NAME_QUERY_MODE)
  private QueryModeEnum queryMode;

  public static final String SERIALIZED_NAME_SHOW_CANCELLED_TRANSACTIONS = "showCancelledTransactions";
  @SerializedName(SERIALIZED_NAME_SHOW_CANCELLED_TRANSACTIONS)
  private Boolean showCancelledTransactions;


  public TransactionQueryParameters startDate(String startDate) {
    this.startDate = startDate; 
    return this;
  }

   /**
   * The lower bound effective datetime or cut label (inclusive) from which to build the transactions.
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "The lower bound effective datetime or cut label (inclusive) from which to build the transactions.")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public TransactionQueryParameters endDate(String endDate) {
    this.endDate = endDate; 
    return this;
  }

   /**
   * The upper bound effective datetime or cut label (inclusive) from which to retrieve transactions.
   * @return endDate
  **/
  @ApiModelProperty(required = true, value = "The upper bound effective datetime or cut label (inclusive) from which to retrieve transactions.")
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public TransactionQueryParameters queryMode(QueryModeEnum queryMode) {
    this.queryMode = queryMode; 
    return this;
  }

   /**
   * The date to compare against the upper and lower bounds for the effective datetime or cut label. Defaults to &#39;TradeDate&#39; if not specified. The available values are: TradeDate, SettleDate
   * @return queryMode
  **/
  @ApiModelProperty(value = "The date to compare against the upper and lower bounds for the effective datetime or cut label. Defaults to 'TradeDate' if not specified. The available values are: TradeDate, SettleDate")
  public QueryModeEnum getQueryMode() {
    return queryMode;
  }

  public void setQueryMode(QueryModeEnum queryMode) {
    this.queryMode = queryMode;
  }


  public TransactionQueryParameters showCancelledTransactions(Boolean showCancelledTransactions) {
    this.showCancelledTransactions = showCancelledTransactions; 
    return this;
  }

   /**
   * Option to specify whether or not to include cancelled transactions in the output. Defaults to False if not specified.
   * @return showCancelledTransactions
  **/
  @ApiModelProperty(value = "Option to specify whether or not to include cancelled transactions in the output. Defaults to False if not specified.")
  public Boolean getShowCancelledTransactions() {
    return showCancelledTransactions;
  }

  public void setShowCancelledTransactions(Boolean showCancelledTransactions) {
    this.showCancelledTransactions = showCancelledTransactions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return true;
  }

  @Override
  public int hashCode() {
    return super.hashCode();  
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionQueryParameters {\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    queryMode: ").append(toIndentedString(queryMode)).append("\n");
    sb.append("    showCancelledTransactions: ").append(toIndentedString(showCancelledTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
