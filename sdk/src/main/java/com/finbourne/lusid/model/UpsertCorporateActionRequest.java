/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3438
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.finbourne.lusid.model.CorporateActionTransitionRequest;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * UpsertCorporateActionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpsertCorporateActionRequest {
  public static final String SERIALIZED_NAME_CORPORATE_ACTION_CODE = "corporateActionCode";
  @SerializedName(SERIALIZED_NAME_CORPORATE_ACTION_CODE)
  private String corporateActionCode;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ANNOUNCEMENT_DATE = "announcementDate";
  @SerializedName(SERIALIZED_NAME_ANNOUNCEMENT_DATE)
  private OffsetDateTime announcementDate;

  public static final String SERIALIZED_NAME_EX_DATE = "exDate";
  @SerializedName(SERIALIZED_NAME_EX_DATE)
  private OffsetDateTime exDate;

  public static final String SERIALIZED_NAME_RECORD_DATE = "recordDate";
  @SerializedName(SERIALIZED_NAME_RECORD_DATE)
  private OffsetDateTime recordDate;

  public static final String SERIALIZED_NAME_PAYMENT_DATE = "paymentDate";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATE)
  private OffsetDateTime paymentDate;

  public static final String SERIALIZED_NAME_TRANSITIONS = "transitions";
  @SerializedName(SERIALIZED_NAME_TRANSITIONS)
  private List<CorporateActionTransitionRequest> transitions = new ArrayList<>();


  public UpsertCorporateActionRequest corporateActionCode(String corporateActionCode) {
    this.corporateActionCode = corporateActionCode; 
    return this;
  }

   /**
   * Get corporateActionCode
   * @return corporateActionCode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCorporateActionCode() {
    return corporateActionCode;
  }

  public void setCorporateActionCode(String corporateActionCode) {
    this.corporateActionCode = corporateActionCode;
  }


  public UpsertCorporateActionRequest description(String description) {
    this.description = description; 
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpsertCorporateActionRequest announcementDate(OffsetDateTime announcementDate) {
    this.announcementDate = announcementDate; 
    return this;
  }

   /**
   * Get announcementDate
   * @return announcementDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getAnnouncementDate() {
    return announcementDate;
  }

  public void setAnnouncementDate(OffsetDateTime announcementDate) {
    this.announcementDate = announcementDate;
  }


  public UpsertCorporateActionRequest exDate(OffsetDateTime exDate) {
    this.exDate = exDate; 
    return this;
  }

   /**
   * Get exDate
   * @return exDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getExDate() {
    return exDate;
  }

  public void setExDate(OffsetDateTime exDate) {
    this.exDate = exDate;
  }


  public UpsertCorporateActionRequest recordDate(OffsetDateTime recordDate) {
    this.recordDate = recordDate; 
    return this;
  }

   /**
   * Get recordDate
   * @return recordDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getRecordDate() {
    return recordDate;
  }

  public void setRecordDate(OffsetDateTime recordDate) {
    this.recordDate = recordDate;
  }


  public UpsertCorporateActionRequest paymentDate(OffsetDateTime paymentDate) {
    this.paymentDate = paymentDate; 
    return this;
  }

   /**
   * Get paymentDate
   * @return paymentDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getPaymentDate() {
    return paymentDate;
  }

  public void setPaymentDate(OffsetDateTime paymentDate) {
    this.paymentDate = paymentDate;
  }


  public UpsertCorporateActionRequest transitions(List<CorporateActionTransitionRequest> transitions) {
    this.transitions = transitions; 
    return this;
  }

  public UpsertCorporateActionRequest addTransitionsItem(CorporateActionTransitionRequest transitionsItem) {
   
    this.transitions.add(transitionsItem);
    return this;
  }

   /**
   * Get transitions
   * @return transitions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CorporateActionTransitionRequest> getTransitions() {
    return transitions;
  }

  public void setTransitions(List<CorporateActionTransitionRequest> transitions) {
    this.transitions = transitions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return true;
  }

  @Override
  public int hashCode() {
    return super.hashCode();  
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsertCorporateActionRequest {\n");
    sb.append("    corporateActionCode: ").append(toIndentedString(corporateActionCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    announcementDate: ").append(toIndentedString(announcementDate)).append("\n");
    sb.append("    exDate: ").append(toIndentedString(exDate)).append("\n");
    sb.append("    recordDate: ").append(toIndentedString(recordDate)).append("\n");
    sb.append("    paymentDate: ").append(toIndentedString(paymentDate)).append("\n");
    sb.append("    transitions: ").append(toIndentedString(transitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
