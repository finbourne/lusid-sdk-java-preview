/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3439
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.SideConfigurationDataRequest;
import com.finbourne.lusid.model.TransactionConfigurationDataRequest;
import com.finbourne.lusid.model.TransactionSetConfigurationData;
import com.finbourne.lusid.model.TransactionSetConfigurationDataRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SystemConfigurationApi
 */
@Ignore
public class SystemConfigurationApiTest {

    private final SystemConfigurationApi api = new SystemConfigurationApi();

    
    /**
     * [EARLY ACCESS] Create transaction type
     *
     * Create a new transaction type by specifying a definition and mappings to movements.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createConfigurationTransactionTypeTest() throws ApiException {
        TransactionConfigurationDataRequest transactionConfigurationDataRequest = null;
        TransactionSetConfigurationData response = api.createConfigurationTransactionType(transactionConfigurationDataRequest);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Create side definition
     *
     * Create a new side definition for use in a transaction type. For more information, see https://support.lusid.com/knowledgebase/article/KA-01875.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSideDefinitionTest() throws ApiException {
        SideConfigurationDataRequest sideConfigurationDataRequest = null;
        TransactionSetConfigurationData response = api.createSideDefinition(sideConfigurationDataRequest);

        // TODO: test validations
    }
    
    /**
     * [EARLY ACCESS] List transaction types
     *
     * Get the list of current transaction types. For information on the default transaction types provided with  LUSID, see https://support.lusid.com/knowledgebase/article/KA-01873/.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listConfigurationTransactionTypesTest() throws ApiException {
        OffsetDateTime asAt = null;
        TransactionSetConfigurationData response = api.listConfigurationTransactionTypes(asAt);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Set transaction types
     *
     * Configure all existing transaction types. Note it is not possible to configure a single existing transaction type on its own.                WARNING! Changing existing transaction types has a material impact on how data, new and old, is processed and aggregated by LUSID, and will affect your whole organisation. Only call this API if you are fully aware of the implications of the change.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setConfigurationTransactionTypesTest() throws ApiException {
        TransactionSetConfigurationDataRequest transactionSetConfigurationDataRequest = null;
        TransactionSetConfigurationData response = api.setConfigurationTransactionTypes(transactionSetConfigurationDataRequest);

        // TODO: test validations
    }
    
}
