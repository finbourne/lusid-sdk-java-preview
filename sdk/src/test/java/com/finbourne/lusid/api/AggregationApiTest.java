/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3439
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.model.ConfigurationRecipe;
import com.finbourne.lusid.model.CreateRecipeRequest;
import com.finbourne.lusid.model.InlineValuationRequest;
import com.finbourne.lusid.model.ListAggregationResponse;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import com.finbourne.lusid.model.ResourceListOfAggregationQuery;
import com.finbourne.lusid.model.ValuationRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AggregationApi
 */
@Ignore
public class AggregationApiTest {

    private final AggregationApi api = new AggregationApi();

    
    /**
     * [EXPERIMENTAL] Generates a recipe sufficient to perform valuations for the given portfolio.
     *
     * Given a set of scopes, a portfolio Id and a basic recipe, this endpoint generates a configuration recipe with relevant rules that can value the instruments in the portfolio.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateConfigurationRecipeTest() throws ApiException {
        String scope = null;
        String code = null;
        CreateRecipeRequest createRecipeRequest = null;
        ConfigurationRecipe response = api.generateConfigurationRecipe(scope, code, createRecipeRequest);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Query the set of supported \&quot;addresses\&quot; that can be queried from the aggregation endpoint.
     *
     * When a request is made for aggregation, the user needs to know what keys can be passed to it for queryable data. This endpoint allows to queries to provide the set of keys,  what they are and what they return.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryableKeysTest() throws ApiException {
        String page = null;
        Integer limit = null;
        String filter = null;
        ResourceListOfAggregationQuery response = api.getQueryableKeys(page, limit, filter);

        // TODO: test validations
    }
    
    /**
     * [BETA] Perform valuation for a list of portfolios and/or portfolio groups
     *
     * Perform valuation on specified list of portfolio and/or portfolio groups for a set of dates.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getValuationTest() throws ApiException {
        ValuationRequest valuationRequest = null;
        ListAggregationResponse response = api.getValuation(valuationRequest);

        // TODO: test validations
    }
    
    /**
     * [BETA] Perform valuation for an inlined portfolio
     *
     * Perform valuation on the portfolio that is defined by the weighted set of instruments passed to the request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getValuationOfWeightedInstrumentsTest() throws ApiException {
        InlineValuationRequest inlineValuationRequest = null;
        ListAggregationResponse response = api.getValuationOfWeightedInstruments(inlineValuationRequest);

        // TODO: test validations
    }
    
}
