/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3439
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.model;

import com.finbourne.lusid.model.CurrencyAndAmount;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for RealisedGainLoss
 */
public class RealisedGainLossTest {
    private final RealisedGainLoss model = new RealisedGainLoss();

    /**
     * Model tests for RealisedGainLoss
     */
    @Test
    public void testRealisedGainLoss() {
        // TODO: test RealisedGainLoss
    }

    /**
     * Test the property 'instrumentUid'
     */
    @Test
    public void instrumentUidTest() {
        // TODO: test instrumentUid
    }

    /**
     * Test the property 'units'
     */
    @Test
    public void unitsTest() {
        // TODO: test units
    }

    /**
     * Test the property 'purchaseTradeDate'
     */
    @Test
    public void purchaseTradeDateTest() {
        // TODO: test purchaseTradeDate
    }

    /**
     * Test the property 'purchaseSettlementDate'
     */
    @Test
    public void purchaseSettlementDateTest() {
        // TODO: test purchaseSettlementDate
    }

    /**
     * Test the property 'purchasePrice'
     */
    @Test
    public void purchasePriceTest() {
        // TODO: test purchasePrice
    }

    /**
     * Test the property 'costTradeCcy'
     */
    @Test
    public void costTradeCcyTest() {
        // TODO: test costTradeCcy
    }

    /**
     * Test the property 'costPortfolioCcy'
     */
    @Test
    public void costPortfolioCcyTest() {
        // TODO: test costPortfolioCcy
    }

    /**
     * Test the property 'realisedTradeCcy'
     */
    @Test
    public void realisedTradeCcyTest() {
        // TODO: test realisedTradeCcy
    }

    /**
     * Test the property 'realisedTotal'
     */
    @Test
    public void realisedTotalTest() {
        // TODO: test realisedTotal
    }

    /**
     * Test the property 'realisedMarket'
     */
    @Test
    public void realisedMarketTest() {
        // TODO: test realisedMarket
    }

    /**
     * Test the property 'realisedCurrency'
     */
    @Test
    public void realisedCurrencyTest() {
        // TODO: test realisedCurrency
    }

}
